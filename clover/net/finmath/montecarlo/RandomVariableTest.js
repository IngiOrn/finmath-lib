var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":229,"id":40555,"methods":[{"el":43,"sc":2,"sl":33},{"el":48,"sc":2,"sl":45},{"el":69,"sc":2,"sl":51},{"el":97,"sc":2,"sl":71},{"el":111,"sc":2,"sl":99},{"el":125,"sc":2,"sl":113},{"el":136,"sc":2,"sl":127},{"el":171,"sc":2,"sl":142},{"el":190,"sc":2,"sl":173},{"el":209,"sc":2,"sl":192},{"el":228,"sc":2,"sl":211}],"name":"RandomVariableTest","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_14":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_143":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_146":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_148":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_159":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_188":{"methods":[{"sl":211}],"name":"testFloor[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_193":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_198":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_204":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_212":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_218":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_222":{"methods":[{"sl":192}],"name":"testCap[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_248":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_296":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_30":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_312":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_32":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_320":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_322":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_347":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_352":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_376":{"methods":[{"sl":173}],"name":"testAdd[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_38":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_414":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_417":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_431":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_433":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_448":{"methods":[{"sl":142}],"name":"testGetQuantile[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_457":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_46":{"methods":[{"sl":192}],"name":"testCap[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_462":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_465":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_468":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_470":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_472":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_49":{"methods":[{"sl":192}],"name":"testCap[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_495":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_53":{"methods":[{"sl":192}],"name":"testCap[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_587":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_597":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_600":{"methods":[{"sl":192}],"name":"testCap[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_616":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_62":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_80":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [218, 159, 204, 14, 495], [], [], [], [218, 159, 204, 14, 495], [], [], [218, 159, 204, 14, 495], [218, 159, 204, 14, 495], [218, 159, 204, 14, 495], [218, 159, 204, 14, 495], [218, 159, 204, 14, 495], [], [], [218, 159, 204, 14, 495], [], [], [218, 159, 204, 14, 495], [], [], [465, 352, 417, 470, 433], [], [], [], [465, 352, 417, 470, 433], [], [], [], [465, 352, 417, 470, 433], [465, 352, 417, 470, 433], [], [], [465, 352, 417, 470, 433], [], [], [465, 352, 417, 470, 433], [], [], [465, 352, 417, 470, 433], [465, 352, 417, 470, 433], [], [], [465, 352, 417, 470, 433], [], [], [465, 352, 417, 470, 433], [], [], [30, 320, 248, 148, 616], [], [], [], [30, 320, 248, 148, 616], [], [], [30, 320, 248, 148, 616], [], [], [30, 320, 248, 148, 616], [30, 320, 248, 148, 616], [], [], [62, 468, 587, 347, 312], [], [], [], [62, 468, 587, 347, 312], [], [], [62, 468, 587, 347, 312], [], [], [62, 468, 587, 347, 312], [62, 468, 587, 347, 312], [], [], [457, 296, 193, 80, 32], [], [], [], [457, 296, 193, 80, 32], [], [], [457, 296, 193, 80, 32], [457, 296, 193, 80, 32], [], [], [], [], [], [], [448, 414, 1, 322, 597], [], [], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [], [], [448, 414, 1, 322, 597], [], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [], [448, 414, 1, 322, 597], [448, 414, 1, 322, 597], [], [], [376, 212, 198, 472, 462], [], [], [], [376, 212, 198, 472, 462], [], [], [376, 212, 198, 472, 462], [], [], [376, 212, 198, 472, 462], [], [], [376, 212, 198, 472, 462], [], [], [376, 212, 198, 472, 462], [], [], [53, 49, 46, 600, 222], [], [], [], [53, 49, 46, 600, 222], [], [], [53, 49, 46, 600, 222], [], [], [53, 49, 46, 600, 222], [], [], [53, 49, 46, 600, 222], [], [], [53, 49, 46, 600, 222], [], [], [38, 146, 188, 431, 143], [], [], [], [38, 146, 188, 431, 143], [], [], [38, 146, 188, 431, 143], [], [], [38, 146, 188, 431, 143], [], [], [38, 146, 188, 431, 143], [], [], [38, 146, 188, 431, 143], [], []]
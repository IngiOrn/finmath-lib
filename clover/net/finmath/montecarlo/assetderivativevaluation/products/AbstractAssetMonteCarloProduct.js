var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":44,"id":15360,"methods":[{"el":27,"sc":2,"sl":25},{"el":43,"sc":2,"sl":32}],"name":"AbstractAssetMonteCarloProduct","sl":20}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_102":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0]","pass":true,"statements":[{"sl":26}]},"test_103":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_105":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloBermudanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_108":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_110":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_116":{"methods":[{"sl":25}],"name":"testHedgePerformance[MonteCarloAssetModel [model=BlackScholesModel [initialValue=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@2de23121,\n ID=0], riskFreeRate=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@63475ace,\n ID=1], volatility=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2], randomVariableFactory=RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.0, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=false, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]], initialState=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@c0c2f8d,\n ID=3]], drift=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@305b7c14,\n ID=6]], factorLoadings=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2]]]]-AbstractMonteCarloProduct [currency=null]]","pass":true,"statements":[{"sl":26}]},"test_122":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_128":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[1]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_132":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_15":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_167":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_175":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_182":{"methods":[{"sl":25},{"sl":32}],"name":"test[xi=0.5}]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_183":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_190":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_197":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_198":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_237":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_254":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_258":{"methods":[{"sl":25},{"sl":32}],"name":"test[xi=0}]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_260":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_265":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloAsianOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_267":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_269":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_270":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_275":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_277":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_292":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_303":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_338":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloAsianOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_343":{"methods":[{"sl":25},{"sl":32}],"name":"hTest","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_346":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0.01]","pass":true,"statements":[{"sl":26}]},"test_356":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_369":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloEuropeanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_37":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_371":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_408":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_42":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_44":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_447":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_467":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_468":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_474":{"methods":[{"sl":25},{"sl":32}],"name":"testProductImplementation","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_475":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0.05]","pass":true,"statements":[{"sl":26}]},"test_492":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_516":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_518":{"methods":[{"sl":25}],"name":"testHedgePerformance","pass":true,"statements":[{"sl":26}]},"test_521":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[0]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_528":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_530":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_556":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_56":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_561":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_567":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_58":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_59":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloEuropeanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_594":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[2]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_61":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_614":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_616":{"methods":[{"sl":25},{"sl":32}],"name":"bsTest","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_624":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_626":{"methods":[{"sl":25}],"name":"testSensitivities","pass":true,"statements":[{"sl":26}]},"test_640":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloBermudanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_649":{"methods":[{"sl":25}],"name":"testHedgePerformance[MonteCarloAssetModel [model=BlackScholesModel [initialValue=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@2de23121,\n ID=0], riskFreeRate=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@63475ace,\n ID=1], volatility=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2], randomVariableFactory=RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.0, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=false, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]], initialState=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@c0c2f8d,\n ID=3]], drift=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@305b7c14,\n ID=6]], factorLoadings=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2]]]]-EuropeanOption [maturity=5.0, strike=1.2840254166877414, underlyingIndex=0, nameOfUnderliyng=null]]","pass":true,"statements":[{"sl":26}]},"test_650":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_72":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_82":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_88":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [132, 640, 303, 254, 275, 269, 265, 475, 614, 260, 72, 492, 116, 556, 650, 102, 258, 371, 343, 626, 37, 182, 518, 103, 369, 42, 468, 408, 59, 167, 88, 175, 198, 346, 270, 56, 467, 61, 356, 82, 237, 474, 649, 183, 44, 616, 267, 58, 277, 516, 567, 447, 15, 561, 530, 122, 197, 190, 528, 108, 624, 105, 338, 110, 292], [132, 640, 303, 254, 275, 269, 265, 475, 614, 260, 72, 492, 116, 556, 650, 102, 258, 371, 343, 626, 37, 182, 518, 103, 369, 42, 468, 408, 59, 167, 88, 175, 198, 346, 270, 56, 467, 61, 356, 82, 237, 474, 649, 183, 44, 616, 267, 58, 277, 516, 567, 447, 15, 561, 530, 122, 197, 190, 528, 108, 624, 105, 338, 110, 292], [], [], [], [], [], [132, 303, 254, 275, 269, 614, 521, 260, 72, 492, 556, 650, 258, 371, 343, 37, 182, 103, 42, 468, 408, 167, 88, 198, 270, 56, 467, 594, 61, 128, 356, 82, 237, 474, 183, 44, 616, 58, 277, 516, 567, 447, 561, 530, 122, 197, 190, 528, 108, 624, 110], [], [], [132, 303, 254, 275, 269, 614, 521, 260, 72, 492, 556, 650, 258, 371, 343, 37, 182, 103, 42, 468, 408, 167, 88, 198, 270, 56, 467, 594, 61, 128, 356, 82, 237, 474, 183, 44, 616, 58, 277, 516, 567, 447, 561, 530, 122, 197, 190, 528, 108, 624, 110], [132, 303, 254, 275, 269, 614, 521, 260, 72, 492, 556, 650, 258, 371, 343, 37, 182, 103, 42, 468, 408, 167, 88, 198, 270, 56, 467, 594, 61, 128, 356, 82, 237, 474, 183, 44, 616, 58, 277, 516, 567, 447, 561, 530, 122, 197, 190, 528, 108, 624, 110], [], [], [], [], [], [], [], []]
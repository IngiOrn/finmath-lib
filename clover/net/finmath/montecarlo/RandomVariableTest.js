var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":229,"id":40555,"methods":[{"el":43,"sc":2,"sl":33},{"el":48,"sc":2,"sl":45},{"el":69,"sc":2,"sl":51},{"el":97,"sc":2,"sl":71},{"el":111,"sc":2,"sl":99},{"el":125,"sc":2,"sl":113},{"el":136,"sc":2,"sl":127},{"el":171,"sc":2,"sl":142},{"el":190,"sc":2,"sl":173},{"el":209,"sc":2,"sl":192},{"el":228,"sc":2,"sl":211}],"name":"RandomVariableTest","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_113":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_126":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_138":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_156":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_161":{"methods":[{"sl":142}],"name":"testGetQuantile[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_188":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_193":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_221":{"methods":[{"sl":192}],"name":"testCap[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_234":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_244":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_282":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_301":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_334":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_339":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_340":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_35":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_36":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_389":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_392":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_401":{"methods":[{"sl":192}],"name":"testCap[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_403":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_404":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_41":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_426":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_427":{"methods":[{"sl":192}],"name":"testCap[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_430":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_46":{"methods":[{"sl":211}],"name":"testFloor[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_466":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_495":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_496":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_51":{"methods":[{"sl":51}],"name":"testRandomVariableDeterministc[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":59},{"sl":60},{"sl":61},{"sl":62},{"sl":65},{"sl":68}]},"test_519":{"methods":[{"sl":113}],"name":"testRandomVariableArithmeticSquaredPow[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":117},{"sl":120},{"sl":123},{"sl":124}]},"test_541":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_562":{"methods":[{"sl":99}],"name":"testRandomVariableArithmeticSqrtPow[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":103},{"sl":106},{"sl":109},{"sl":110}]},"test_564":{"methods":[{"sl":192}],"name":"testCap[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]},"test_588":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_622":{"methods":[{"sl":173}],"name":"testAdd[net.finmath.montecarlo.RandomVariableLazyEvaluationFactory@3eb738bb]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_623":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_631":{"methods":[{"sl":173}],"name":"testAdd[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":177},{"sl":180},{"sl":183},{"sl":186},{"sl":189}]},"test_634":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_77":{"methods":[{"sl":142}],"name":"testGetQuantile[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":145},{"sl":146},{"sl":148},{"sl":149},{"sl":150},{"sl":151},{"sl":152},{"sl":155},{"sl":157},{"sl":158},{"sl":160},{"sl":161},{"sl":163},{"sl":164},{"sl":166},{"sl":167},{"sl":169},{"sl":170}]},"test_79":{"methods":[{"sl":71}],"name":"testRandomVariableStochastic[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":75},{"sl":79},{"sl":80},{"sl":83},{"sl":86},{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_81":{"methods":[{"sl":127}],"name":"testRandomVariableStandardDeviation[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":131},{"sl":134},{"sl":135}]},"test_86":{"methods":[{"sl":211}],"name":"testFloor[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":215},{"sl":218},{"sl":221},{"sl":224},{"sl":227}]},"test_87":{"methods":[{"sl":192}],"name":"testCap[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":196},{"sl":199},{"sl":202},{"sl":205},{"sl":208}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
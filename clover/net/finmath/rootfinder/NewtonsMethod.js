var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":95,"id":31610,"methods":[{"el":31,"sc":2,"sl":28},{"el":39,"sc":2,"sl":36},{"el":47,"sc":2,"sl":44},{"el":70,"sc":2,"sl":57},{"el":78,"sc":2,"sl":75},{"el":86,"sc":2,"sl":83},{"el":94,"sc":2,"sl":91}],"name":"NewtonsMethod","sl":16}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_114":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testSwaptionSmile[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_182":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"test[xi=0.5}]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_213":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testSwaptionSmile[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_237":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"test","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_258":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"test[xi=0}]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_349":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"test","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_52":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testSwaptionSmile[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_529":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testSwaptionSmile[TERMINAL]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_55":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testSwaptionSmile[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_598":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testConversions","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_64":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testSwaptionSmile[SPOT]","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_68":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testRootFinders","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_71":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"testSwaptionSmileCalibration","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]},"test_85":{"methods":[{"sl":28},{"sl":36},{"sl":44},{"sl":57},{"sl":75},{"sl":83},{"sl":91}],"name":"test","pass":true,"statements":[{"sl":29},{"sl":30},{"sl":38},{"sl":46},{"sl":60},{"sl":62},{"sl":63},{"sl":67},{"sl":69},{"sl":77},{"sl":85},{"sl":93}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [], [], [], [], [], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [], [], [], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], [258, 55, 598, 52, 529, 64, 71, 182, 114, 237, 68, 85, 349, 213], [], []]
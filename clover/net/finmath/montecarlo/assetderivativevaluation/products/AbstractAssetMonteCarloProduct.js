var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":44,"id":15271,"methods":[{"el":27,"sc":2,"sl":25},{"el":43,"sc":2,"sl":32}],"name":"AbstractAssetMonteCarloProduct","sl":20}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_101":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_105":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_117":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_120":{"methods":[{"sl":25},{"sl":32}],"name":"hTest","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_146":{"methods":[{"sl":25}],"name":"testHedgePerformance","pass":true,"statements":[{"sl":26}]},"test_147":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_158":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_163":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_172":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloBermudanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_197":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_204":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloEuropeanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_21":{"methods":[{"sl":25}],"name":"testHedgePerformance[MonteCarloAssetModel [model=BlackScholesModel [initialValue=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@2de23121,\n ID=0], riskFreeRate=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@63475ace,\n ID=1], volatility=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2], abstractRandomVariableFactory=RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.0, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=false, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]], initialState=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@c0c2f8d,\n ID=3]], drift=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@305b7c14,\n ID=6]], factorLoadings=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2]]]]-EuropeanOption [maturity=5.0, strike=1.2840254166877414, underlyingIndex=0, nameOfUnderliyng=null]]","pass":true,"statements":[{"sl":26}]},"test_218":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_247":{"methods":[{"sl":25}],"name":"testHedgePerformance[MonteCarloAssetModel [model=BlackScholesModel [initialValue=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@2de23121,\n ID=0], riskFreeRate=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@63475ace,\n ID=1], volatility=RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2], abstractRandomVariableFactory=RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.0, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=false, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]], initialState=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@c0c2f8d,\n ID=3]], drift=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@305b7c14,\n ID=6]], factorLoadings=[RandomVariableDifferentiableAAD [values=net.finmath.stochastic.Scalar@4988d8b8,\n ID=2]]]]-AbstractMonteCarloProduct [currency=null]]","pass":true,"statements":[{"sl":26}]},"test_261":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[0]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_265":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_270":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_29":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_290":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_30":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_318":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_319":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_353":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_365":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_367":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_369":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_376":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_377":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_39":{"methods":[{"sl":25},{"sl":32}],"name":"test[xi=0}]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_392":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_396":{"methods":[{"sl":25},{"sl":32}],"name":"test[xi=0.5}]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_399":{"methods":[{"sl":25},{"sl":32}],"name":"bsTest","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_408":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloBermudanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_411":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_415":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_43":{"methods":[{"sl":25}],"name":"testSensitivities","pass":true,"statements":[{"sl":26}]},"test_454":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_458":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloAsianOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_461":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_468":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_47":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0.05]","pass":true,"statements":[{"sl":26}]},"test_470":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_475":{"methods":[{"sl":25}],"name":"test[RandomVariableDifferentiableAADFactory TestFunctionMonteCarloAsianOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_51":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[1]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_514":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_518":{"methods":[{"sl":25},{"sl":32}],"name":"testProductImplementation","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_519":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_532":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_535":{"methods":[{"sl":32}],"name":"testProductAADSensitivities[2]","pass":true,"statements":[{"sl":35},{"sl":36}]},"test_539":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_546":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=false]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_548":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanAsianBermudanOption[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_555":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_556":{"methods":[{"sl":25},{"sl":32}],"name":"testProductAADSensitivities","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_558":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_572":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_591":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_6":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_601":{"methods":[{"sl":25}],"name":"test","pass":true,"statements":[{"sl":26}]},"test_630":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableADFactory [toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_632":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallDelta[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_68":{"methods":[{"sl":25},{"sl":32}],"name":"test","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_73":{"methods":[{"sl":25}],"name":"test[RandomVariableFromArrayFactory TestFunctionMonteCarloEuropeanOption(1,3,1,1)]","pass":true,"statements":[{"sl":26}]},"test_78":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0]","pass":true,"statements":[{"sl":26}]},"test_82":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCallVega[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_88":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]},"test_89":{"methods":[{"sl":25}],"name":"testProductImplementation[displacement=0.01]","pass":true,"statements":[{"sl":26}]},"test_94":{"methods":[{"sl":25},{"sl":32}],"name":"testEuropeanCall[RandomVariableDifferentiableAADFactory [diracDeltaApproximationMethod=DISCRETE_DELTA, diracDeltaApproximationWidthPerStdDev=0.05, diracDeltaApproximationDensityRegressionWidthPerStdDev=0.5, isGradientRetainsLeafNodesOnly=true, toString()=AbstractRandomVariableDifferentiableFactory [randomVariableFactoryForNonDifferentiable=RandomVariableFromArrayFactory [isUseDoublePrecisionFloatingPointImplementation=true]]]]","pass":true,"statements":[{"sl":26},{"sl":35},{"sl":36}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [630, 68, 88, 120, 73, 632, 158, 548, 555, 461, 78, 204, 172, 39, 82, 101, 21, 411, 218, 558, 94, 30, 367, 197, 475, 270, 377, 415, 518, 89, 470, 392, 318, 532, 546, 117, 519, 43, 601, 399, 591, 408, 29, 319, 539, 247, 6, 396, 468, 105, 147, 146, 376, 458, 514, 365, 353, 47, 556, 369, 572, 265, 454, 163, 290], [630, 68, 88, 120, 73, 632, 158, 548, 555, 461, 78, 204, 172, 39, 82, 101, 21, 411, 218, 558, 94, 30, 367, 197, 475, 270, 377, 415, 518, 89, 470, 392, 318, 532, 546, 117, 519, 43, 601, 399, 591, 408, 29, 319, 539, 247, 6, 396, 468, 105, 147, 146, 376, 458, 514, 365, 353, 47, 556, 369, 572, 265, 454, 163, 290], [], [], [], [], [], [630, 68, 88, 535, 120, 632, 158, 548, 555, 461, 39, 82, 101, 411, 558, 94, 30, 197, 270, 377, 415, 518, 470, 392, 318, 532, 546, 51, 117, 519, 399, 591, 29, 319, 539, 6, 396, 468, 105, 147, 376, 514, 365, 353, 556, 369, 261, 572, 454, 163, 290], [], [], [630, 68, 88, 535, 120, 632, 158, 548, 555, 461, 39, 82, 101, 411, 558, 94, 30, 197, 270, 377, 415, 518, 470, 392, 318, 532, 546, 51, 117, 519, 399, 591, 29, 319, 539, 6, 396, 468, 105, 147, 376, 514, 365, 353, 556, 369, 261, 572, 454, 163, 290], [630, 68, 88, 535, 120, 632, 158, 548, 555, 461, 39, 82, 101, 411, 558, 94, 30, 197, 270, 377, 415, 518, 470, 392, 318, 532, 546, 51, 117, 519, 399, 591, 29, 319, 539, 6, 396, 468, 105, 147, 376, 514, 365, 353, 556, 369, 261, 572, 454, 163, 290], [], [], [], [], [], [], [], []]